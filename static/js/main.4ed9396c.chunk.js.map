{"version":3,"sources":["Navbar.js","BlogList.js","useFetch.js","Home.js","Create.js","BlogDetails.js","NotFound.js","App.js","index.js"],"names":["Navbar","className","to","style","color","backgroundColor","borderRadius","BlogList","blogs","map","blog","id","title","author","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","Create","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","type","required","value","onChange","target","disabled","BlogDetails","useParams","onClick","Link","require","NotFound","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAuBeA,EArBA,WACb,OACE,sBAAKC,UAAU,SAAf,UACE,+CACA,sBAAKA,UAAU,QAAf,UACE,cAAC,OAAD,CAAMC,GAAG,IAAT,kBACA,cAAC,OAAD,CACEA,GAAG,UACHC,MAAO,CACLC,MAAO,QACPC,gBAAiB,UACjBC,aAAc,OALlB,6BCSOC,EAfE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB,OACE,qBAAKP,UAAU,YAAf,SACGO,EAAMC,KAAI,SAACC,GAAD,OACT,qBAAKT,UAAU,eAAf,SACE,eAAC,OAAD,CAAMC,GAAE,iBAAYQ,EAAKC,IAAzB,UACE,6BAAKD,EAAKE,QACV,4CAAeF,EAAKG,cAHWH,EAAKC,U,OCoCjCG,EAxCE,SAACC,GAAS,IAAD,EACAC,mBAAS,MADT,mBACjBC,EADiB,KACXC,EADW,OAEUF,oBAAS,GAFnB,mBAEjBG,EAFiB,KAENC,EAFM,OAGEJ,mBAAS,MAHX,mBAGjBK,EAHiB,KAGVC,EAHU,KAqCxB,OAhCAC,qBAAU,WACR,IAAMC,EAAY,IAAIC,gBA4BtB,OA1BAC,YAAW,WACTC,MAAMZ,EAAK,CAAEa,OAAQJ,EAAUI,SAC5BC,MAAK,SAACC,GACL,IAAKA,EAAIC,GAEP,MAAMC,MAAM,8CAEd,OAAOF,EAAIG,UAEZJ,MAAK,SAACZ,GACLG,GAAa,GACbF,EAAQD,GACRK,EAAS,SAEVY,OAAM,SAACC,GACW,eAAbA,EAAIC,KACNC,QAAQC,IAAI,kBAGZlB,GAAa,GACbE,EAASa,EAAII,eAGlB,KAGI,kBAAMf,EAAUgB,WACtB,CAACzB,IAEG,CAAEE,OAAME,YAAWE,UCtBboB,EAdF,WAAO,IAAD,EACyB3B,EACxC,+BADMO,EADS,EACTA,MAAOF,EADE,EACFA,UAAiBX,EADf,EACSS,KAI1B,OACE,sBAAKhB,UAAU,OAAf,UACGoB,GAAS,8BAAMA,IACfF,GAAa,6CACbX,GAAS,cAAC,EAAD,CAAUA,MAAOA,Q,OC2ClBkC,EArDA,WAAO,IAAD,EACO1B,mBAAS,KADhB,mBACZJ,EADY,KACL+B,EADK,OAEK3B,mBAAS,KAFd,mBAEZ4B,EAFY,KAENC,EAFM,OAGS7B,mBAAS,SAHlB,mBAGZH,EAHY,KAGJiC,EAHI,OAIe9B,oBAAS,GAJxB,mBAIZG,EAJY,KAIDC,EAJC,KAKb2B,EAAUC,cAmBhB,OACE,sBAAK/C,UAAU,SAAf,UACE,gDACA,uBAAMgD,SApBV,SAAsBC,GACpBA,EAAEC,iBAEF,IAAMzC,EAAO,CAAEE,QAAOgC,OAAM/B,UAE5BO,GAAa,GAEbO,MAAM,8BAA+B,CACnCyB,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BT,KAAMU,KAAKC,UAAU7C,KACpBmB,MAAK,WACNQ,QAAQC,IAAI,kBACZlB,GAAa,GACb2B,EAAQS,KAAK,SAMb,UACE,iDACA,uBACEC,KAAK,OACLC,UAAQ,EACRC,MAAO/C,EACPgD,SAAU,SAACV,GAAD,OAAOP,EAASO,EAAEW,OAAOF,UAErC,gDACA,0BACED,UAAQ,EACRC,MAAOf,EACPgB,SAAU,SAACV,GAAD,OAAOL,EAAQK,EAAEW,OAAOF,UAEpC,kDACA,yBAAQA,MAAO9C,EAAQ+C,SAAU,SAACV,GAAD,OAAOJ,EAAUI,EAAEW,OAAOF,QAA3D,UACE,wBAAQA,MAAM,SAAd,mBACA,wBAAQA,MAAM,QAAd,uBAEAxC,GAAa,gDACdA,GAAa,wBAAQ2C,UAAQ,EAAhB,sCChBPC,EA9BK,WAAO,IACjBpD,EAAOqD,cAAPrD,GADgB,EAEiBG,EACvC,+BAAiCH,GADrBD,EAFU,EAEhBO,KAAYI,EAFI,EAEJA,MAAOF,EAFH,EAEGA,UAGrB4B,EAAUC,cAShB,OACE,sBAAK/C,UAAU,eAAf,UACGkB,GAAa,6CACbE,GAAS,8BAAMA,IACfX,GACC,oCACE,6BAAKA,EAAKE,QACV,4CAAeF,EAAKG,UACpB,8BAAMH,EAAKkC,OACX,wBAAQqB,QAhBI,WAClBtC,MAAM,+BAAiCjB,EAAKC,GAAI,CAC9CyC,OAAQ,WACPvB,MAAK,WACNkB,EAAQS,KAAK,SAYT,2BC1BFU,EAASC,EAAQ,GAAjBD,KAYOE,EAVE,WACf,OACE,sBAAKnE,UAAU,YAAf,UACE,uCACA,0DACA,cAACiE,EAAD,CAAMhE,GAAG,IAAT,0CC0BSmE,MA1Bf,WACE,OACE,cAAC,gBAAD,UACE,sBAAKpE,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,UAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqE,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,iBCnBdC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4ed9396c.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar\">\n      <h1>The Dojo Blog</h1>\n      <div className=\"links\">\n        <Link to=\"/\">Home</Link>\n        <Link\n          to=\"/create\"\n          style={{\n            color: \"white\",\n            backgroundColor: \"#f1356d\",\n            borderRadius: \"8px\",\n          }}\n        >\n          New Blog\n        </Link>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import { Link } from \"react-router-dom\";\n\nconst BlogList = ({ blogs }) => {\n  return (\n    <div className=\"blog-list\">\n      {blogs.map((blog) => (\n        <div className=\"blog-preview\" key={blog.id}>\n          <Link to={`/blogs/${blog.id}`}>\n            <h2>{blog.title}</h2>\n            <p>Written by {blog.author}</p>\n          </Link>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default BlogList;\n","import { useState, useEffect } from \"react\";\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const abortCont = new AbortController();\n\n    setTimeout(() => {\n      fetch(url, { signal: abortCont.signal })\n        .then((res) => {\n          if (!res.ok) {\n            // error coming back from server\n            throw Error(\"could not fetch the data for that resource\");\n          }\n          return res.json();\n        })\n        .then((data) => {\n          setIsPending(false);\n          setData(data);\n          setError(null);\n        })\n        .catch((err) => {\n          if (err.name === \"AbortError\") {\n            console.log(\"fetch aborted\");\n          } else {\n            // auto catches network / connection error\n            setIsPending(false);\n            setError(err.message);\n          }\n        });\n    }, 1000);\n\n    // abort the fetch\n    return () => abortCont.abort();\n  }, [url]);\n\n  return { data, isPending, error };\n};\n\nexport default useFetch;\n","import BlogList from \"./BlogList\";\nimport useFetch from \"./useFetch\";\n\nconst Home = () => {\n  const { error, isPending, data: blogs } = useFetch(\n    \"http://localhost:8000/blogs\"\n  );\n\n  return (\n    <div className=\"home\">\n      {error && <div>{error}</div>}\n      {isPending && <div>Loading...</div>}\n      {blogs && <BlogList blogs={blogs} />}\n    </div>\n  );\n};\n\nexport default Home;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nconst Create = () => {\n  const [title, setTitle] = useState(\" \");\n  const [body, setBody] = useState(\" \");\n  const [author, setAuthor] = useState(\"mario\");\n  const [isPending, setIsPending] = useState(false);\n  const history = useHistory();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const blog = { title, body, author };\n\n    setIsPending(true);\n\n    fetch(\"http://localhost:8000/blogs\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(blog),\n    }).then(() => {\n      console.log(\"new blog added\");\n      setIsPending(false);\n      history.push(\"/\");\n    });\n  }\n  return (\n    <div className=\"create\">\n      <h2>Add a New Blog</h2>\n      <form onSubmit={handleSubmit}>\n        <label> Blog title:</label>\n        <input\n          type=\"text\"\n          required\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <label> Blog body:</label>\n        <textarea\n          required\n          value={body}\n          onChange={(e) => setBody(e.target.value)}\n        ></textarea>\n        <label> Blog author:</label>\n        <select value={author} onChange={(e) => setAuthor(e.target.value)}>\n          <option value=\"marion\">mario</option>\n          <option value=\"yoshi\">Yoshi</option>\n        </select>\n        {!isPending && <button> Add Blog </button>}\n        {isPending && <button disabled> Adding Blog.... </button>}\n      </form>\n    </div>\n  );\n};\n\nexport default Create;\n","import { useParams, useHistory } from \"react-router-dom\";\nimport useFetch from \"./useFetch\";\n\nconst BlogDetails = () => {\n  const { id } = useParams();\n  const { data: blog, error, isPending } = useFetch(\n    \"http://localhost:8000/blogs/\" + id\n  );\n  const history = useHistory();\n\n  const handleClick = () => {\n    fetch(\"http://localhost:8000/blogs/\" + blog.id, {\n      method: \"DELETE\",\n    }).then(() => {\n      history.push(\"/\");\n    });\n  };\n  return (\n    <div className=\"blog-details\">\n      {isPending && <div>Loading...</div>}\n      {error && <div>{error}</div>}\n      {blog && (\n        <article>\n          <h2>{blog.title}</h2>\n          <p>Written by {blog.author}</p>\n          <div>{blog.body}</div>\n          <button onClick={handleClick}>Delete</button>\n        </article>\n      )}\n    </div>\n  );\n};\n\nexport default BlogDetails;\n","const { Link } = require(\"react-router-dom\");\n\nconst NotFound = () => {\n  return (\n    <div className=\"not-found\">\n      <h2>Sorry</h2>\n      <p>The page cannot be found.</p>\n      <Link to=\"/\"> Back to the HomePage...</Link>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import Navbar from \"./Navbar\";\nimport Home from \"./Home\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Create from \"./Create\";\nimport BlogDetails from \"./BlogDetails\";\nimport NotFound from \"./NotFound\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/create\">\n              <Create />\n            </Route>\n            <Route path=\"/blogs/:id\">\n              <BlogDetails />\n            </Route>\n            <Route path=\"*\">\n              <NotFound />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}